{"includedArchiveIdentifiers":["spark.Spark"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertible\/init(convert:method:encoding:)","title":"init(convert: any URLConvert, method: SKMethod, encoding: any ParameterEncoding)","type":"init"},{"path":"\/documentation\/spark\/requestconvertible\/init(convert:method:encoding:parameters:headers:requestmodifier:)","title":"init(convert: any URLConvert, method: SKMethod, encoding: any ParameterEncoding, parameters: Parameters?, headers: Headers?, requestModifier: RequestModifier?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertible\/convert","title":"var convert: any URLConvert","type":"property"},{"path":"\/documentation\/spark\/requestconvertible\/decoder","title":"var decoder: JSONDecoder","type":"property"},{"path":"\/documentation\/spark\/requestconvertible\/encoding","title":"var encoding: any ParameterEncoding","type":"property"},{"path":"\/documentation\/spark\/requestconvertible\/headers","title":"var headers: Headers?","type":"property"},{"path":"\/documentation\/spark\/requestconvertible\/method","title":"var method: SKMethod","type":"property"},{"path":"\/documentation\/spark\/requestconvertible\/parameters","title":"var parameters: Parameters?","type":"property"},{"path":"\/documentation\/spark\/requestconvertible\/requestmodifier","title":"var requestModifier: RequestModifier?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertible\/get","title":"static var get: Convert","type":"property"},{"path":"\/documentation\/spark\/requestconvertible\/post","title":"static var post: Convert","type":"property"}],"path":"\/documentation\/spark\/requestconvertible\/convertibleconvenience-implementations","title":"ConvertibleConvenience Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertible\/convert(_:)","title":"func convert(any URLConvert) -> Self","type":"method"},{"path":"\/documentation\/spark\/requestconvertible\/encoding(_:)","title":"func encoding(ParameterEncoding) -> Self","type":"method"},{"path":"\/documentation\/spark\/requestconvertible\/headers(_:)","title":"func headers(Headers?) -> Self","type":"method"},{"path":"\/documentation\/spark\/requestconvertible\/method(_:)","title":"func method(SKMethod) -> Self","type":"method"},{"path":"\/documentation\/spark\/requestconvertible\/parameters(_:)","title":"func parameters(Parameters?) -> Self","type":"method"},{"path":"\/documentation\/spark\/requestconvertible\/requestmodifier(_:)","title":"func requestModifier(RequestModifier?) -> Self","type":"method"}],"path":"\/documentation\/spark\/requestconvertible\/convertibledata-implementations","title":"ConvertibleData Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertible\/urlrequest","title":"var urlRequest: URLRequest?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertible\/urlrequestconvert()","title":"func urlRequestConvert() throws -> URLRequest","type":"method"}],"path":"\/documentation\/spark\/requestconvertible\/urlrequestconvert-implementations","title":"URLRequestConvert Implementations","type":"symbol"}],"path":"\/documentation\/spark\/requestconvertible","title":"RequestConvertible","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/init(convert:method:encoding:)","title":"init(convert: any URLConvert, method: SKMethod, encoding: any ParameterEncoding)","type":"init"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/init(convert:method:encoding:parameters:headers:requestmodifier:decoder:)","title":"init(convert: any URLConvert, method: SKMethod, encoding: any ParameterEncoding, parameters: Parameters?, headers: Headers?, requestModifier: RequestModifier?, decoder: JSONDecoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/convert","title":"var convert: any URLConvert","type":"property"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/decoder","title":"var decoder: JSONDecoder","type":"property"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/encoding","title":"var encoding: any ParameterEncoding","type":"property"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/headers","title":"var headers: Headers?","type":"property"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/method","title":"var method: SKMethod","type":"property"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/model-swift.property","title":"var model: Item.Type","type":"property"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/parameters","title":"var parameters: Parameters?","type":"property"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/requestmodifier","title":"var requestModifier: RequestModifier?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/model-swift.typealias","title":"RequestConvertibleModel.Model","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/get","title":"static var get: Convert","type":"property"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/post","title":"static var post: Convert","type":"property"}],"path":"\/documentation\/spark\/requestconvertiblemodel\/convertibleconvenience-implementations","title":"ConvertibleConvenience Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/convert(_:)","title":"func convert(any URLConvert) -> Self","type":"method"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/encoding(_:)","title":"func encoding(ParameterEncoding) -> Self","type":"method"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/headers(_:)","title":"func headers(Headers?) -> Self","type":"method"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/method(_:)","title":"func method(SKMethod) -> Self","type":"method"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/parameters(_:)","title":"func parameters(Parameters?) -> Self","type":"method"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/requestmodifier(_:)","title":"func requestModifier(RequestModifier?) -> Self","type":"method"}],"path":"\/documentation\/spark\/requestconvertiblemodel\/convertibledata-implementations","title":"ConvertibleData Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/decoder(_:)","title":"func decoder(JSONDecoder) -> Self","type":"method"}],"path":"\/documentation\/spark\/requestconvertiblemodel\/convertiblemodel-implementations","title":"ConvertibleModel Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/urlrequest","title":"var urlRequest: URLRequest?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/requestconvertiblemodel\/urlrequestconvert()","title":"func urlRequestConvert() throws -> URLRequest","type":"method"}],"path":"\/documentation\/spark\/requestconvertiblemodel\/urlrequestconvert-implementations","title":"URLRequestConvert Implementations","type":"symbol"}],"path":"\/documentation\/spark\/requestconvertiblemodel","title":"RequestConvertibleModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/token\/init(cancellable:)","title":"init(cancellable: AnyCancellable?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/token\/unseal()","title":"func unseal()","type":"method"}],"path":"\/documentation\/spark\/token","title":"Token","type":"class"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/spark\/convertible","title":"Convertible","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/convertibleconvenience\/init(convert:method:encoding:)","title":"init(convert: any URLConvert, method: SKMethod, encoding: any ParameterEncoding)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/spark\/convertibleconvenience\/convert","title":"ConvertibleConvenience.Convert","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/convertibleconvenience\/get","title":"static var get: Convert","type":"property"},{"path":"\/documentation\/spark\/convertibleconvenience\/post","title":"static var post: Convert","type":"property"}],"path":"\/documentation\/spark\/convertibleconvenience","title":"ConvertibleConvenience","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/convertibledata\/convert","title":"var convert: any URLConvert","type":"property"},{"path":"\/documentation\/spark\/convertibledata\/encoding","title":"var encoding: any ParameterEncoding","type":"property"},{"path":"\/documentation\/spark\/convertibledata\/headers","title":"var headers: Headers?","type":"property"},{"path":"\/documentation\/spark\/convertibledata\/method","title":"var method: SKMethod","type":"property"},{"path":"\/documentation\/spark\/convertibledata\/parameters","title":"var parameters: Parameters?","type":"property"},{"path":"\/documentation\/spark\/convertibledata\/requestmodifier","title":"var requestModifier: RequestModifier?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/convertibledata\/convert(_:)","title":"func convert(any URLConvert) -> Self","type":"method"},{"path":"\/documentation\/spark\/convertibledata\/encoding(_:)","title":"func encoding(ParameterEncoding) -> Self","type":"method"},{"path":"\/documentation\/spark\/convertibledata\/headers(_:)","title":"func headers(Headers?) -> Self","type":"method"},{"path":"\/documentation\/spark\/convertibledata\/method(_:)","title":"func method(SKMethod) -> Self","type":"method"},{"path":"\/documentation\/spark\/convertibledata\/parameters(_:)","title":"func parameters(Parameters?) -> Self","type":"method"},{"path":"\/documentation\/spark\/convertibledata\/requestmodifier(_:)","title":"func requestModifier(RequestModifier?) -> Self","type":"method"}],"path":"\/documentation\/spark\/convertibledata","title":"ConvertibleData","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/spark\/convertiblemodel\/model-swift.associatedtype","title":"Model","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/convertiblemodel\/decoder","title":"var decoder: JSONDecoder","type":"property"},{"path":"\/documentation\/spark\/convertiblemodel\/model-swift.property","title":"var model: Model.Type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/convertiblemodel\/decoder(_:)","title":"func decoder(JSONDecoder) -> Self","type":"method"}],"path":"\/documentation\/spark\/convertiblemodel","title":"ConvertibleModel","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/parameterencoding\/encode(_:with:)","title":"func encode(any URLRequestConvert, with: Parameters?) throws -> URLRequest","type":"method"}],"path":"\/documentation\/spark\/parameterencoding","title":"ParameterEncoding","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/sparkcompatible\/sk-swift.property","title":"var sk: SK<Self>","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/sparkcompatible\/sk-swift.type.property","title":"static var sk: SK<Self>.Type","type":"property"}],"path":"\/documentation\/spark\/sparkcompatible","title":"SparkCompatible","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/urlconvert\/urlconvert()","title":"func urlConvert() throws -> URL","type":"method"}],"path":"\/documentation\/spark\/urlconvert","title":"URLConvert","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/urlrequestconvert\/urlrequest","title":"var urlRequest: URLRequest?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/spark\/urlrequestconvert\/urlrequestconvert()-70zfn","title":"func urlRequestConvert() throws -> URLRequest","type":"method"}],"title":"URLRequestConvert Implementations","type":"groupMarker"}],"path":"\/documentation\/spark\/urlrequestconvert\/urlrequestconvert()-66ez6","title":"func urlRequestConvert() throws -> URLRequest","type":"method"}],"path":"\/documentation\/spark\/urlrequestconvert","title":"URLRequestConvert","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/init(key:value:)","title":"init(key: Header.Key, value: String)","type":"init"},{"path":"\/documentation\/spark\/header\/init(name:value:)","title":"init(name: String, value: String)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/accept(_:)","title":"static func accept(String) -> Header","type":"method"},{"path":"\/documentation\/spark\/header\/acceptcharset(_:)","title":"static func acceptCharset(String) -> Header","type":"method"},{"path":"\/documentation\/spark\/header\/acceptencoding(_:)","title":"static func acceptEncoding(String) -> Header","type":"method"},{"path":"\/documentation\/spark\/header\/acceptlanguage(_:)","title":"static func acceptLanguage(String) -> Header","type":"method"},{"path":"\/documentation\/spark\/header\/authorization(_:)","title":"static func authorization(String) -> Header","type":"method"},{"path":"\/documentation\/spark\/header\/authorization(bearertoken:)","title":"static func authorization(bearerToken: String) -> Header","type":"method"},{"path":"\/documentation\/spark\/header\/authorization(username:password:)","title":"static func authorization(username: String, password: String) -> Header","type":"method"},{"path":"\/documentation\/spark\/header\/contentdisposition(_:)","title":"static func contentDisposition(String) -> Header","type":"method"},{"path":"\/documentation\/spark\/header\/contentencoding(_:)","title":"static func contentEncoding(String) -> Header","type":"method"},{"path":"\/documentation\/spark\/header\/contenttype(_:)-4xb4h","title":"static func contentType(ContentTypeValue) -> Header","type":"method"},{"path":"\/documentation\/spark\/header\/contenttype(_:)-m5mb","title":"static func contentType(String) -> Header","type":"method"},{"path":"\/documentation\/spark\/header\/useragent(_:)","title":"static func userAgent(String) -> Header","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/application(_:)","title":"case application(Application)","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/audio(_:)","title":"case audio(Audio)","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/image(_:)","title":"case image(Image)","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/multipart(_:)","title":"case multipart(Multipart)","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/text(_:)","title":"case text(Text)","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/video(_:)","title":"case video(Video)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/application\/json","title":"case json","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/application\/msword","title":"case msword","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/application\/octetstream","title":"case octetStream","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/application\/pdf","title":"case pdf","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/application\/xml","title":"case xml","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/application\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/application\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/application\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/application\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/application\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/application\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/application","title":"Header.ContentTypeValue.Application","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/audio\/mpeg","title":"case mpeg","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/audio\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/audio\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/audio\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/audio\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/audio\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/audio\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/audio","title":"Header.ContentTypeValue.Audio","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/image\/gif","title":"case gif","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/image\/jpeg","title":"case jpeg","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/image\/png","title":"case png","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/image\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/image\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/image\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/image\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/image\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/image\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/image","title":"Header.ContentTypeValue.Image","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/multipart\/formdata","title":"case formData","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/multipart\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/multipart\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/multipart\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/multipart\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/multipart\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/multipart\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/multipart","title":"Header.ContentTypeValue.Multipart","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/text\/css","title":"case css","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/text\/html","title":"case html","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/text\/javascript","title":"case javascript","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/text\/plain","title":"case plain","type":"case"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/text\/xml","title":"case xml","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/text\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/text\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/text\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/text\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/text\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/text\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/text","title":"Header.ContentTypeValue.Text","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/video\/mp4","title":"case mp4","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/video\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/video\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/video\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/video\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/contenttypevalue\/video\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/video\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/spark\/header\/contenttypevalue\/video","title":"Header.ContentTypeValue.Video","type":"enum"}],"path":"\/documentation\/spark\/header\/contenttypevalue","title":"Header.ContentTypeValue","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/key\/accept","title":"case Accept","type":"case"},{"path":"\/documentation\/spark\/header\/key\/acceptcharset","title":"case AcceptCharset","type":"case"},{"path":"\/documentation\/spark\/header\/key\/acceptencoding","title":"case AcceptEncoding","type":"case"},{"path":"\/documentation\/spark\/header\/key\/acceptlanguage","title":"case AcceptLanguage","type":"case"},{"path":"\/documentation\/spark\/header\/key\/authorization","title":"case Authorization","type":"case"},{"path":"\/documentation\/spark\/header\/key\/basic","title":"case Basic","type":"case"},{"path":"\/documentation\/spark\/header\/key\/bearer","title":"case Bearer","type":"case"},{"path":"\/documentation\/spark\/header\/key\/contentdisposition","title":"case ContentDisposition","type":"case"},{"path":"\/documentation\/spark\/header\/key\/contentencoding","title":"case ContentEncoding","type":"case"},{"path":"\/documentation\/spark\/header\/key\/contenttype","title":"case ContentType","type":"case"},{"path":"\/documentation\/spark\/header\/key\/useragent","title":"case UserAgent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/key\/init(rawvalue:)","title":"init?(rawValue: (String))","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/key\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/header\/key\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/key\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/key\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/spark\/header\/key\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/spark\/header\/key","title":"Header.Key","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/spark\/header\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/header\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/header\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/spark\/header","title":"Header","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/init()","title":"init()","type":"init"},{"path":"\/documentation\/spark\/headers\/init(_:)-12c99","title":"init([Header.Key : String])","type":"init"},{"path":"\/documentation\/spark\/headers\/init(_:)-6872","title":"init([String : String])","type":"init"},{"path":"\/documentation\/spark\/headers\/init(headers:)","title":"init(headers: [Header])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/dictionary","title":"var dictionary: [String : String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/add(key:value:)","title":"func add(key: Header.Key, value: String)","type":"method"},{"path":"\/documentation\/spark\/headers\/add(name:value:)","title":"func add(name: String, value: String)","type":"method"},{"path":"\/documentation\/spark\/headers\/index(before:)","title":"func index(before: Int) -> Int","type":"method"},{"path":"\/documentation\/spark\/headers\/remove(key:)","title":"func remove(key: Header.Key)","type":"method"},{"path":"\/documentation\/spark\/headers\/remove(name:)","title":"func remove(name: String)","type":"method"},{"path":"\/documentation\/spark\/headers\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/spark\/headers\/sorted()","title":"func sorted() -> Headers","type":"method"},{"path":"\/documentation\/spark\/headers\/update(_:)","title":"func update(Header)","type":"method"},{"path":"\/documentation\/spark\/headers\/update(key:value:)","title":"func update(key: Header.Key, value: String)","type":"method"},{"path":"\/documentation\/spark\/headers\/update(name:value:)","title":"func update(name: String, value: String)","type":"method"},{"path":"\/documentation\/spark\/headers\/value(for:)-2yljl","title":"func value(for: String) -> String?","type":"method"},{"path":"\/documentation\/spark\/headers\/value(for:)-uxt4","title":"func value(for: Header.Key) -> String?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/subscript(_:)-2youk","title":"subscript(String) -> String?","type":"subscript"},{"path":"\/documentation\/spark\/headers\/subscript(_:)-7ngxq","title":"subscript(Header.Key) -> String?","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/spark\/headers\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/spark\/headers\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/spark\/headers\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/spark\/headers\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/spark\/headers\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/spark\/headers\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/spark\/headers\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/spark\/headers\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/spark\/headers\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/spark\/headers\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/spark\/headers\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/spark\/headers\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/spark\/headers\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/spark\/headers\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/spark\/headers\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/spark\/headers\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/spark\/headers\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/spark\/headers\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/spark\/headers\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/spark\/headers\/indices(of:)","title":"func indices(of: Self.Element) -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/spark\/headers\/indices(where:)","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/spark\/headers\/makeiterator()","title":"func makeIterator() -> IndexingIterator<[Header]>","type":"method"},{"path":"\/documentation\/spark\/headers\/map(_:)-3kuor","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/spark\/headers\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/spark\/headers\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/spark\/headers\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/spark\/headers\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/spark\/headers\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/spark\/headers\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/spark\/headers\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/spark\/headers\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/spark\/headers\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/spark\/headers\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/spark\/headers\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/spark\/headers\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/spark\/headers\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/spark\/headers\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/subscript(_:)-5hc2y","title":"subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"subscript"},{"path":"\/documentation\/spark\/headers\/subscript(_:)-5qni3","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/spark\/headers\/subscript(_:)-8t3bz","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/spark\/headers\/subscript(_:)-f4er","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/spark\/headers\/subscript(_:)-pd2j","title":"subscript(Int) -> Header","type":"subscript"}],"path":"\/documentation\/spark\/headers\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/headers\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/init(arrayliteral:)","title":"init(arrayLiteral: Header...)","type":"init"}],"path":"\/documentation\/spark\/headers\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, String)...)","type":"init"}],"path":"\/documentation\/spark\/headers\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/spark\/headers\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/headers\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/spark\/headers\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/spark\/headers\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/spark\/headers\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/spark\/headers\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/spark\/headers\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/spark\/headers\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/spark\/headers\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/spark\/headers\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/spark\/headers\/filter(_:)-5xbvu","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/spark\/headers\/filter(_:)-63f7m","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/spark\/headers\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/spark\/headers\/flatmap(_:)-1grwd","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/spark\/headers\/flatmap(_:)-6ff14","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/spark\/headers\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/spark\/headers\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/spark\/headers\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/spark\/headers\/map(_:)-1pti","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/spark\/headers\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/spark\/headers\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/spark\/headers\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/spark\/headers\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/spark\/headers\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/spark\/headers\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/spark\/headers\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/spark\/headers\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/spark\/headers\/sorted(using:)-3ruhe","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/spark\/headers\/sorted(using:)-8hdg0","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/spark\/headers\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/spark\/headers\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/spark\/headers\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/spark\/headers\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/spark\/headers","title":"Headers","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/jsonencoding\/init(options:)","title":"init(options: JSONSerialization.WritingOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/jsonencoding\/options","title":"let options: JSONSerialization.WritingOptions","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/jsonencoding\/encode(_:jsonobject:)","title":"func encode(any URLRequestConvert, jsonObject: Any?) throws -> URLRequest","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/jsonencoding\/default","title":"static var `default`: JSONEncoding","type":"property"},{"path":"\/documentation\/spark\/jsonencoding\/prettyprinted","title":"static var prettyPrinted: JSONEncoding","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/jsonencoding\/encode(_:with:)","title":"func encode(any URLRequestConvert, with: Parameters?) throws -> URLRequest","type":"method"}],"path":"\/documentation\/spark\/jsonencoding\/parameterencoding-implementations","title":"ParameterEncoding Implementations","type":"symbol"}],"path":"\/documentation\/spark\/jsonencoding","title":"JSONEncoding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/sk\/init(_:)","title":"init(SK)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/sk\/escape","title":"var escape: String","type":"property"},{"path":"\/documentation\/spark\/sk\/isbool","title":"var isBool: Bool","type":"property"},{"path":"\/documentation\/spark\/sk\/jsonobject","title":"var jsonObject: Any?","type":"property"},{"path":"\/documentation\/spark\/sk\/jsonobjectoptions","title":"var jsonObjectOptions: SparkJSONOptions","type":"property"},{"path":"\/documentation\/spark\/sk\/sk","title":"let sk: SK","type":"property"},{"path":"\/documentation\/spark\/sk\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/sk\/seal(_:)","title":"func seal(Token)","type":"method"},{"path":"\/documentation\/spark\/sk\/string(_:)","title":"func string(String.Encoding) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/spark\/sk\/jsondata","title":"SK.JSONData","type":"typealias"},{"path":"\/documentation\/spark\/sk\/sparkjsonoptions","title":"SK.SparkJSONOptions","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/sk\/decoder","title":"static var decoder: JSONDecoder","type":"property"},{"path":"\/documentation\/spark\/sk\/encoder","title":"static var encoder: JSONEncoder","type":"property"},{"path":"\/documentation\/spark\/sk\/urlqueryallowed","title":"static let urlQueryAllowed: CharacterSet","type":"property"}],"path":"\/documentation\/spark\/sk","title":"SK","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/spark\/get(_:encoding:parameters:headers:)","title":"func get(any URLConvert, encoding: ParameterEncoding, parameters: Parameters?, headers: Headers?) -> ResponseData","type":"method"},{"path":"\/documentation\/spark\/spark\/get(_:encoding:parameters:headers:model:decoder:)","title":"func get<Item>(any URLConvert, encoding: ParameterEncoding, parameters: Parameters?, headers: Headers?, model: Item.Type, decoder: JSONDecoder) -> ResponseModel<Item>","type":"method"},{"path":"\/documentation\/spark\/spark\/get(at:)","title":"func get<Request>(at: Request) -> ResponseModel<Request.Model>","type":"method"},{"path":"\/documentation\/spark\/spark\/get(in:)","title":"func get<Request>(in: Request) -> ResponseData","type":"method"},{"path":"\/documentation\/spark\/spark\/post(_:encoding:parameters:headers:)","title":"func post(any URLConvert, encoding: ParameterEncoding, parameters: Parameters?, headers: Headers?) -> ResponseData","type":"method"},{"path":"\/documentation\/spark\/spark\/post(_:encoding:parameters:headers:model:decoder:)","title":"func post<Item>(any URLConvert, encoding: ParameterEncoding, parameters: Parameters?, headers: Headers?, model: Item.Type, decoder: JSONDecoder) -> ResponseModel<Item>","type":"method"},{"path":"\/documentation\/spark\/spark\/post(at:)","title":"func post<Request>(at: Request) -> ResponseModel<Request.Model>","type":"method"},{"path":"\/documentation\/spark\/spark\/post(in:)","title":"func post<Request>(in: Request) -> ResponseData","type":"method"},{"path":"\/documentation\/spark\/spark\/request(_:method:encoding:parameters:headers:requestmodifier:)","title":"func request(any URLConvert, method: SKMethod, encoding: ParameterEncoding, parameters: Parameters?, headers: Headers?, requestModifier: RequestModifier?) -> ResponseData","type":"method"},{"path":"\/documentation\/spark\/spark\/request(_:method:encoding:parameters:headers:requestmodifier:model:decoder:)","title":"func request<Item>(any URLConvert, method: SKMethod, encoding: ParameterEncoding, parameters: Parameters?, headers: Headers?, requestModifier: RequestModifier?, model: Item.Type, decoder: JSONDecoder) -> ResponseModel<Item>","type":"method"},{"path":"\/documentation\/spark\/spark\/request(at:)","title":"func request<Request>(at: Request) -> ResponseModel<Request.Model>","type":"method"},{"path":"\/documentation\/spark\/spark\/request(in:)","title":"func request<Request>(in: Request) -> ResponseData","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/spark\/default","title":"static let `default`: Spark","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/spark\/sk","title":"var sk: SK<Self>","type":"property"}],"path":"\/documentation\/spark\/spark\/sparkcompatible-implementations","title":"SparkCompatible Implementations","type":"symbol"}],"path":"\/documentation\/spark\/spark","title":"Spark","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/urlencoding\/init(destination:arrayencoding:boolencoding:)","title":"init(destination: URLEncoding.Destination, arrayEncoding: ArrayEncoding, boolEncoding: BoolEncoding)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/urlencoding\/arrayencoding-swift.property","title":"var arrayEncoding: URLEncoding.ArrayEncoding","type":"property"},{"path":"\/documentation\/spark\/urlencoding\/boolencoding-swift.property","title":"var boolEncoding: URLEncoding.BoolEncoding","type":"property"},{"path":"\/documentation\/spark\/urlencoding\/destination-swift.property","title":"var destination: URLEncoding.Destination","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/urlencoding\/default","title":"static var `default`: URLEncoding","type":"property"},{"path":"\/documentation\/spark\/urlencoding\/httpbody","title":"static var httpBody: URLEncoding","type":"property"},{"path":"\/documentation\/spark\/urlencoding\/querystring","title":"static var queryString: URLEncoding","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/urlencoding\/arrayencoding-swift.enum\/brackets","title":"case brackets","type":"case"},{"path":"\/documentation\/spark\/urlencoding\/arrayencoding-swift.enum\/custom(_:)","title":"case custom((_ key: String, _ index: Int) -> String)","type":"case"},{"path":"\/documentation\/spark\/urlencoding\/arrayencoding-swift.enum\/indexinbrackets","title":"case indexInBrackets","type":"case"},{"path":"\/documentation\/spark\/urlencoding\/arrayencoding-swift.enum\/nobrackets","title":"case noBrackets","type":"case"}],"path":"\/documentation\/spark\/urlencoding\/arrayencoding-swift.enum","title":"URLEncoding.ArrayEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/urlencoding\/boolencoding-swift.enum\/literal","title":"case literal","type":"case"},{"path":"\/documentation\/spark\/urlencoding\/boolencoding-swift.enum\/numeric","title":"case numeric","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/urlencoding\/boolencoding-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/urlencoding\/boolencoding-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/spark\/urlencoding\/boolencoding-swift.enum","title":"URLEncoding.BoolEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/urlencoding\/destination-swift.enum\/httpbody","title":"case httpBody","type":"case"},{"path":"\/documentation\/spark\/urlencoding\/destination-swift.enum\/methoddependent","title":"case methodDependent","type":"case"},{"path":"\/documentation\/spark\/urlencoding\/destination-swift.enum\/querystring","title":"case queryString","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/urlencoding\/destination-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/urlencoding\/destination-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/spark\/urlencoding\/destination-swift.enum","title":"URLEncoding.Destination","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/urlencoding\/encode(_:with:)","title":"func encode(any URLRequestConvert, with: Parameters?) throws -> URLRequest","type":"method"}],"path":"\/documentation\/spark\/urlencoding\/parameterencoding-implementations","title":"ParameterEncoding Implementations","type":"symbol"}],"path":"\/documentation\/spark\/urlencoding","title":"URLEncoding","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/spark\/parameters","title":"Parameters","type":"typealias"},{"path":"\/documentation\/spark\/requestmodifier","title":"RequestModifier","type":"typealias"},{"path":"\/documentation\/spark\/responseany","title":"ResponseAny","type":"typealias"},{"path":"\/documentation\/spark\/responsedata","title":"ResponseData","type":"typealias"},{"path":"\/documentation\/spark\/responsemodel","title":"ResponseModel","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/skerror\/invalidresponse","title":"case invalidResponse","type":"case"},{"path":"\/documentation\/spark\/skerror\/invalidurl(url:)","title":"case invalidURL(url: any URLConvert)","type":"case"},{"path":"\/documentation\/spark\/skerror\/parameterencodingfailed(reason:)","title":"case parameterEncodingFailed(reason: ParameterEncodingFailureReason)","type":"case"},{"path":"\/documentation\/spark\/skerror\/urlerror","title":"case urlError","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/skerror\/isinvalidresponse","title":"var isInvalidResponse: Bool","type":"property"},{"path":"\/documentation\/spark\/skerror\/isinvalidurlerror","title":"var isInvalidURLError: Bool","type":"property"},{"path":"\/documentation\/spark\/skerror\/isparameterencodingerror","title":"var isParameterEncodingError: Bool","type":"property"},{"path":"\/documentation\/spark\/skerror\/isurlerror","title":"var isURLError: Bool","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/skerror\/jsonencodingerror\/invalidjsonobject","title":"case invalidJSONObject","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/skerror\/jsonencodingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/skerror\/jsonencodingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/skerror\/jsonencodingerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/spark\/skerror\/jsonencodingerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/spark\/skerror\/jsonencodingerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/spark\/skerror\/jsonencodingerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/spark\/skerror\/jsonencodingerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/spark\/skerror\/jsonencodingerror","title":"SKError.JSONEncodingError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/skerror\/parameterencodingfailurereason\/customencodingfailed(error:)","title":"case customEncodingFailed(error: any Swift.Error)","type":"case"},{"path":"\/documentation\/spark\/skerror\/parameterencodingfailurereason\/jsonencodingfailed(error:)","title":"case jsonEncodingFailed(error: any Swift.Error)","type":"case"},{"path":"\/documentation\/spark\/skerror\/parameterencodingfailurereason\/missingurl","title":"case missingURL","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/skerror\/parameterencodingfailurereason\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/spark\/skerror\/parameterencodingfailurereason\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/spark\/skerror\/parameterencodingfailurereason\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/spark\/skerror\/parameterencodingfailurereason\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/spark\/skerror\/parameterencodingfailurereason\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/spark\/skerror\/parameterencodingfailurereason","title":"SKError.ParameterEncodingFailureReason","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/skerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/spark\/skerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/spark\/skerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/spark\/skerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/spark\/skerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/spark\/skerror","title":"SKError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/spark\/skmethod\/customize(_:)","title":"case customize(String)","type":"case"},{"path":"\/documentation\/spark\/skmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/spark\/skmethod\/post","title":"case post","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/skmethod\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/skmethod\/rawvalue","title":"var rawValue: RawValue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/spark\/skmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/spark\/skmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/skmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/skmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/spark\/skmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/spark\/skmethod","title":"SKMethod","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/sparkinfo\/version","title":"static let version: String","type":"property"}],"path":"\/documentation\/spark\/sparkinfo","title":"SparkInfo","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/combine\/anycancellable\/sk","title":"var sk: SK<Self>","type":"property"}],"path":"\/documentation\/spark\/combine\/anycancellable\/sparkcompatible-implementations","title":"SparkCompatible Implementations","type":"symbol"}],"path":"\/documentation\/spark\/combine\/anycancellable","title":"AnyCancellable","type":"extension"}],"path":"\/documentation\/spark\/combine","title":"Combine","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/foundation\/jsondecoder\/sk","title":"var sk: SK<Self>","type":"property"}],"path":"\/documentation\/spark\/foundation\/jsondecoder\/sparkcompatible-implementations","title":"SparkCompatible Implementations","type":"symbol"}],"path":"\/documentation\/spark\/foundation\/jsondecoder","title":"JSONDecoder","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/foundation\/jsonencoder\/sk","title":"var sk: SK<Self>","type":"property"}],"path":"\/documentation\/spark\/foundation\/jsonencoder\/sparkcompatible-implementations","title":"SparkCompatible Implementations","type":"symbol"}],"path":"\/documentation\/spark\/foundation\/jsonencoder","title":"JSONEncoder","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/foundation\/nsnumber\/sk","title":"var sk: SK<Self>","type":"property"}],"path":"\/documentation\/spark\/foundation\/nsnumber\/sparkcompatible-implementations","title":"SparkCompatible Implementations","type":"symbol"}],"path":"\/documentation\/spark\/foundation\/nsnumber","title":"NSNumber","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/foundation\/characterset\/sk","title":"var sk: SK<Self>","type":"property"}],"path":"\/documentation\/spark\/foundation\/characterset\/sparkcompatible-implementations","title":"SparkCompatible Implementations","type":"symbol"}],"path":"\/documentation\/spark\/foundation\/characterset","title":"CharacterSet","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/foundation\/data\/sk","title":"var sk: SK<Self>","type":"property"}],"path":"\/documentation\/spark\/foundation\/data\/sparkcompatible-implementations","title":"SparkCompatible Implementations","type":"symbol"}],"path":"\/documentation\/spark\/foundation\/data","title":"Data","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/foundation\/url\/urlconvert()","title":"func urlConvert() throws -> URL","type":"method"}],"path":"\/documentation\/spark\/foundation\/url\/urlconvert-implementations","title":"URLConvert Implementations","type":"symbol"}],"path":"\/documentation\/spark\/foundation\/url","title":"URL","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/foundation\/urlcomponents\/urlconvert()","title":"func urlConvert() throws -> URL","type":"method"}],"path":"\/documentation\/spark\/foundation\/urlcomponents\/urlconvert-implementations","title":"URLConvert Implementations","type":"symbol"}],"path":"\/documentation\/spark\/foundation\/urlcomponents","title":"URLComponents","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/spark\/foundation\/urlrequest\/init(url:method:headers:)","title":"init(url: any URLConvert, method: SKMethod, headers: Headers?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/foundation\/urlrequest\/headers","title":"var headers: Headers","type":"property"},{"path":"\/documentation\/spark\/foundation\/urlrequest\/method","title":"var method: SKMethod?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/foundation\/urlrequest\/urlrequest","title":"var urlRequest: URLRequest?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/foundation\/urlrequest\/urlrequestconvert()","title":"func urlRequestConvert() throws -> URLRequest","type":"method"}],"path":"\/documentation\/spark\/foundation\/urlrequest\/urlrequestconvert-implementations","title":"URLRequestConvert Implementations","type":"symbol"}],"path":"\/documentation\/spark\/foundation\/urlrequest","title":"URLRequest","type":"extension"}],"path":"\/documentation\/spark\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/spark\/swift\/string\/sk","title":"var sk: SK<Self>","type":"property"}],"path":"\/documentation\/spark\/swift\/string\/sparkcompatible-implementations","title":"SparkCompatible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/spark\/swift\/string\/urlconvert()","title":"func urlConvert() throws -> URL","type":"method"}],"path":"\/documentation\/spark\/swift\/string\/urlconvert-implementations","title":"URLConvert Implementations","type":"symbol"}],"path":"\/documentation\/spark\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/spark\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/spark","title":"Spark","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}